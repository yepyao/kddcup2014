# General Parameters, see comment for each definition
# choose the tree booster, 0: tree, 1: linear
booster_type = 0 
# choose logistic regression loss function for binary classification
objective = rank:pairwise

eval_metric = auc

# Tree Booster Parameters
# step size shrinkage
bst:eta = 0.2
# minimum loss reduction required to make a further partition
bst:gamma = 1.0 
# minimum sum of instance weight(hessian) needed in a child
bst:min_child_weight = 10 
# maximum depth of a tree
bst:max_depth = 5

nthread = 10
# Task Parameters
# the number of round to do boosting
num_round = 200
# 0 means do not save any model except the final round model
save_period = 0 
# The path of training data
data = "../../model/train.lr.svm_buffer" 
# The path of validation data, used to monitor training process, here [test] sets name of the validation set
eval[test] = "../../model/test.lr.svm_buffer" 
eval[trainname] = "../../model/train.lr.svm_buffer" 
# The path of test data 
test:data = "../../model/test.lr.svm_buffer"   
